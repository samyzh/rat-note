(window.webpackJsonp=window.webpackJsonp||[]).push([[246],{1404:function(t,v,_){"use strict";_.r(v);var s=_(19),e=Object(s.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"module"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#module"}},[t._v("#")]),t._v(" Module")]),t._v(" "),_("h3",{attrs:{id:"命令"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#命令"}},[t._v("#")]),t._v(" 命令")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("export")]),t._v("：规定模块对外接口\n"),_("ul",[_("li",[_("strong",[t._v("默认导出")]),t._v("："),_("code",[t._v("export default Person")]),t._v("(导入时可指定模块任意名称，无需知晓内部真实名称)")]),t._v(" "),_("li",[_("strong",[t._v("单独导出")]),t._v("："),_("code",[t._v('export const name = "Bruce"')])]),t._v(" "),_("li",[_("strong",[t._v("按需导出")]),t._v("："),_("code",[t._v("export { age, name, sex }")]),t._v("(推荐)")]),t._v(" "),_("li",[_("strong",[t._v("改名导出")]),t._v("："),_("code",[t._v("export { name as newName }")])])])]),t._v(" "),_("li",[_("strong",[t._v("import")]),t._v("：导入模块内部功能\n"),_("ul",[_("li",[_("strong",[t._v("默认导入")]),t._v("："),_("code",[t._v('import Person from "person"')])]),t._v(" "),_("li",[_("strong",[t._v("整体导入")]),t._v("："),_("code",[t._v('import * as Person from "person"')])]),t._v(" "),_("li",[_("strong",[t._v("按需导入")]),t._v("："),_("code",[t._v('import { age, name, sex } from "person"')])]),t._v(" "),_("li",[_("strong",[t._v("改名导入")]),t._v("："),_("code",[t._v('import { name as newName } from "person"')])]),t._v(" "),_("li",[_("strong",[t._v("自执导入")]),t._v("："),_("code",[t._v('import "person"')])]),t._v(" "),_("li",[_("strong",[t._v("复合导入")]),t._v("："),_("code",[t._v('import Person, { name } from "person"')])])])]),t._v(" "),_("li",[_("strong",[t._v("复合模式")]),t._v("："),_("code",[t._v("export命令")]),t._v("和"),_("code",[t._v("import命令")]),t._v("结合在一起写成一行，"),_("strong",[t._v("变量实质没有被导入当前模块")]),t._v("，相当于对外转发接口，导致当前模块无法直接使用其导入变量\n"),_("ul",[_("li",[_("strong",[t._v("默认导入导出")]),t._v("："),_("code",[t._v('export { default } from "person"')])]),t._v(" "),_("li",[_("strong",[t._v("整体导入导出")]),t._v("："),_("code",[t._v('export * from "person"')])]),t._v(" "),_("li",[_("strong",[t._v("按需导入导出")]),t._v("："),_("code",[t._v('export { age, name, sex } from "person"')])]),t._v(" "),_("li",[_("strong",[t._v("改名导入导出")]),t._v("："),_("code",[t._v('export { name as newName } from "person"')])]),t._v(" "),_("li",[_("strong",[t._v("具名改默认导入导出")]),t._v("："),_("code",[t._v('export { name as default } from "person"')])]),t._v(" "),_("li",[_("strong",[t._v("默认改具名导入导出")]),t._v("："),_("code",[t._v('export { default as name } from "person"')])])])])]),t._v(" "),_("p",[t._v("继承："),_("code",[t._v("默认导出")]),t._v("和"),_("code",[t._v("改名导出")]),t._v("结合使用可使模块具备继承性")]),t._v(" "),_("p",[t._v("设计思想：尽量地静态化，使得编译时就能确定模块的依赖关系，以及输入和输出的变量")]),t._v(" "),_("p",[t._v("严格模式："),_("strong",[t._v("ES6模块自动采用严格模式")]),t._v("(不管模块头部是否添加"),_("code",[t._v("use strict")]),t._v(")")]),t._v(" "),_("h3",{attrs:{id:"模块方案"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#模块方案"}},[t._v("#")]),t._v(" 模块方案")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("CommonJS")]),t._v("：用于"),_("strong",[t._v("服务器")]),t._v("(动态化依赖)")]),t._v(" "),_("li",[_("strong",[t._v("AMD")]),t._v("：用于浏览器(动态化依赖)")]),t._v(" "),_("li",[_("strong",[t._v("CMD")]),t._v("：用于浏览器(动态化依赖)")]),t._v(" "),_("li",[_("strong",[t._v("UMD")]),t._v("：用于浏览器和服务器(动态化依赖)")]),t._v(" "),_("li",[_("strong",[t._v("ESM")]),t._v("："),_("strong",[t._v("用于浏览器和服务器")]),t._v("(静态化依赖)")])]),t._v(" "),_("h3",{attrs:{id:"加载方式"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#加载方式"}},[t._v("#")]),t._v(" 加载方式")]),t._v(" "),_("ul",[_("li",[t._v("运行时加载\n"),_("ul",[_("li",[t._v("定义：整体加载模块生成一个对象，再从对象上获取需要的属性和方法进行加载(全部加载)")]),t._v(" "),_("li",[t._v("影响："),_("strong",[t._v("只有运行时才能得到这个对象，导致无法在编译时做静态优化")])])])]),t._v(" "),_("li",[t._v("编译时加载\n"),_("ul",[_("li",[t._v("定义：直接从模块中获取需要的属性和方法进行加载("),_("strong",[t._v("按需加载")]),t._v(")")]),t._v(" "),_("li",[t._v("影响："),_("strong",[t._v("在编译时就完成模块加载，效率比其他方案高")]),t._v("，但无法引用模块本身("),_("strong",[t._v("本身不是对象")]),t._v(")，可拓展JS高级语法("),_("strong",[t._v("宏和类型校验")]),t._v(")")])])])]),t._v(" "),_("h3",{attrs:{id:"加载实现"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#加载实现"}},[t._v("#")]),t._v(" 加载实现")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("传统加载")]),t._v("：通过 "),_("code",[t._v("<script>")]),t._v("进行同步或异步加载脚本\n"),_("ul",[_("li",[t._v("同步加载："),_("code",[t._v('<script src=""><\/script>')])]),t._v(" "),_("li",[t._v("Defer异步加载："),_("code",[t._v('<script src="" defer><\/script>')]),t._v("(顺序加载，渲染完再执行)")]),t._v(" "),_("li",[t._v("Async异步加载："),_("code",[t._v('<script src="" async><\/script>')]),t._v("(乱序加载，下载完就执行)")])])]),t._v(" "),_("li",[_("strong",[t._v("模块加载")]),t._v("："),_("code",[t._v('<script type="module" src=""><\/script>')]),t._v("(默认是Defer异步加载)")])]),t._v(" "),_("h3",{attrs:{id:"commonjs和esm的区别"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#commonjs和esm的区别"}},[t._v("#")]),t._v(" CommonJS和ESM的区别")]),t._v(" "),_("p",[_("strong",[_("code",[t._v("CommonJS")]),t._v("输出"),_("code",[t._v("值的拷贝")]),t._v("，"),_("code",[t._v("ESM")]),t._v("输出"),_("code",[t._v("值的引用")])])]),t._v(" "),_("ul",[_("li",[_("code",[t._v("CommonJS")]),t._v("一旦输出一个值，模块内部的变化就影响不到这个值")]),t._v(" "),_("li",[_("code",[t._v("ESM")]),t._v("是动态引用且不会缓存值，模块里的变量绑定其所在的模块，等到脚本真正执行时，再根据这个只读引用到被加载的那个模块里去取值")])]),t._v(" "),_("p",[_("strong",[_("code",[t._v("CommonJS")]),t._v("是运行时加载，"),_("code",[t._v("ESM")]),t._v("是编译时加载")])]),t._v(" "),_("ul",[_("li",[_("code",[t._v("CommonJS")]),t._v("加载模块是对象(即"),_("code",[t._v("module.exports")]),t._v(")，该对象只有在脚本运行完才会生成")]),t._v(" "),_("li",[_("code",[t._v("ESM")]),t._v("加载模块不是对象，它的对外接口只是一种静态定义，在代码静态解析阶段就会生成")])]),t._v(" "),_("h3",{attrs:{id:"node加载"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#node加载"}},[t._v("#")]),t._v(" Node加载")]),t._v(" "),_("p",[t._v("背景："),_("code",[t._v("CommonJS")]),t._v("和"),_("code",[t._v("ESM")]),t._v("互不兼容，"),_("strong",[t._v("目前解决方案是将两者分开，采用各自的加载方案")])]),t._v(" "),_("p",[t._v("区分："),_("strong",[t._v("要求ESM采用 "),_("code",[t._v(".mjs")]),t._v("后缀文件名")])]),t._v(" "),_("ul",[_("li",[_("code",[t._v("require()")]),t._v("不能加载"),_("code",[t._v(".mjs文件")]),t._v("，只有"),_("code",[t._v("import命令")]),t._v("才可加载"),_("code",[t._v(".mjs文件")])]),t._v(" "),_("li",[_("code",[t._v(".mjs文件")]),t._v("里不能使用"),_("code",[t._v("require()")]),t._v("，必须使用"),_("code",[t._v("import命令")]),t._v("加载文件")])]),t._v(" "),_("p",[t._v("驱动："),_("code",[t._v("node --experimental-modules file.mjs")])]),t._v(" "),_("p",[t._v("限制：Node的"),_("code",[t._v("import命令")]),t._v("目前只支持加载本地模块("),_("code",[t._v("file:协议")]),t._v(")，不支持加载远程模块")]),t._v(" "),_("p",[_("strong",[t._v("加载优先级")])]),t._v(" "),_("ul",[_("li",[t._v("脚本文件省略后缀名：依次尝试加载四个后缀名文件("),_("code",[t._v(".mjs")]),t._v("、"),_("code",[t._v(".js")]),t._v("、"),_("code",[t._v(".json")]),t._v("、"),_("code",[t._v("node")]),t._v(")")]),t._v(" "),_("li",[t._v("以上不存在：尝试加载"),_("code",[t._v("package.json")]),t._v("的"),_("code",[t._v("main字段")]),t._v("指定的脚本")]),t._v(" "),_("li",[t._v("以上不存在：依次尝试加载名称为"),_("code",[t._v("index")]),t._v("四个后缀名文件("),_("code",[t._v(".mjs")]),t._v("、"),_("code",[t._v(".js")]),t._v("、"),_("code",[t._v(".json")]),t._v("、"),_("code",[t._v("node")]),t._v(")")]),t._v(" "),_("li",[t._v("以上不存在：报错")])]),t._v(" "),_("p",[t._v("不存在的内部变量："),_("code",[t._v("arguments")]),t._v("、"),_("code",[t._v("exports")]),t._v("、"),_("code",[t._v("module")]),t._v("、"),_("code",[t._v("require")]),t._v("、"),_("code",[t._v("this")]),t._v("、"),_("code",[t._v("__dirname")]),t._v("、"),_("code",[t._v("__filename")])]),t._v(" "),_("p",[_("strong",[t._v("CommonJS加载ESM")])]),t._v(" "),_("ul",[_("li",[t._v("不能使用"),_("code",[t._v("require()")]),t._v("，只能使用"),_("code",[t._v("import()")])])]),t._v(" "),_("p",[_("strong",[t._v("ESM加载CommonJS")])]),t._v(" "),_("ul",[_("li",[t._v("自动将"),_("code",[t._v("module.exports")]),t._v("转化成"),_("code",[t._v("export default")])]),t._v(" "),_("li",[_("code",[t._v("CommonJS")]),t._v("输出缓存机制在"),_("code",[t._v("ESM")]),t._v("加载方式下依然有效")]),t._v(" "),_("li",[t._v("采用"),_("code",[t._v("import命令")]),t._v("加载"),_("code",[t._v("CommonJS模块")]),t._v("时，不允许采用"),_("code",[t._v("按需导入")]),t._v("，应使用"),_("code",[t._v("默认导入")]),t._v("或"),_("code",[t._v("整体导入")])])]),t._v(" "),_("h3",{attrs:{id:"循环加载"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#循环加载"}},[t._v("#")]),t._v(" 循环加载")]),t._v(" "),_("p",[t._v("定义："),_("code",[t._v("脚本A")]),t._v("的执行依赖"),_("code",[t._v("脚本B")]),t._v("，而"),_("code",[t._v("脚本A")]),t._v("的执行又依赖"),_("code",[t._v("脚本B")])]),t._v(" "),_("p",[_("strong",[t._v("加载原理")])]),t._v(" "),_("ul",[_("li",[t._v("CommonJS："),_("code",[t._v("require()")]),t._v("首次加载脚本就会执行整个脚本，在内存里生成一个对象缓存下来，"),_("strong",[t._v("二次加载脚本时直接从缓存中获取")])]),t._v(" "),_("li",[t._v("ESM："),_("code",[t._v("import命令")]),t._v("加载变量不会被缓存，而是"),_("strong",[t._v("成为一个指向被加载模块的引用")])])]),t._v(" "),_("p",[_("strong",[t._v("循环加载")])]),t._v(" "),_("ul",[_("li",[t._v("CommonJS："),_("strong",[t._v("只输出已经执行的部分，还未执行的部分不会输出")])]),t._v(" "),_("li",[t._v("ESM：需开发者自己保证真正取值时能够取到值 (可把变量写成函数形式，函数具有提升作用)")])]),t._v(" "),_("h3",{attrs:{id:"重点难点"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#重点难点"}},[t._v("#")]),t._v(" 重点难点")]),t._v(" "),_("ul",[_("li",[t._v("ES6模块中，顶层"),_("code",[t._v("this")]),t._v("指向"),_("code",[t._v("undefined")]),t._v("，不应该在顶层代码使用"),_("code",[t._v("this")])]),t._v(" "),_("li",[t._v("一个模块就是一个独立的文件，该文件内部的所有变量，外部无法获取")]),t._v(" "),_("li",[_("code",[t._v("export命令")]),t._v("输出的接口与其对应的值是"),_("code",[t._v("动态绑定关系")]),t._v("，即通过该接口可获取模块内部实时的值")]),t._v(" "),_("li",[_("code",[t._v("import命令")]),t._v("大括号里的变量名必须与被导入模块对外接口的名称相同")]),t._v(" "),_("li",[_("code",[t._v("import命令")]),t._v("输入的变量只读(本质是输入接口)，不允许在加载模块的脚本里改写接口")]),t._v(" "),_("li",[_("code",[t._v("import命令")]),t._v("命令具有提升效果，会提升到整个模块的头部，首先执行")]),t._v(" "),_("li",[t._v("重复执行同一句"),_("code",[t._v("import语句")]),t._v("，只会执行一次")]),t._v(" "),_("li",[_("code",[t._v("export default")]),t._v("命令只能使用一次")]),t._v(" "),_("li",[_("code",[t._v("export default命令")]),t._v("导出的整体模块，在执行"),_("code",[t._v("import命令")]),t._v("时其后不能跟"),_("code",[t._v("大括号")])]),t._v(" "),_("li",[_("code",[t._v("export default命令")]),t._v("本质是输出一个名为"),_("code",[t._v("default")]),t._v("的变量，后面不能跟"),_("code",[t._v("变量声明语句")])]),t._v(" "),_("li",[_("code",[t._v("export default命令")]),t._v("本质是将后面的值赋给名为"),_("code",[t._v("default")]),t._v("的变量，可直接将值写在其后")]),t._v(" "),_("li",[_("code",[t._v("export default命令")]),t._v("和"),_("code",[t._v("export {}命令")]),t._v("可同时存在，对应"),_("code",[t._v("复合导入")])]),t._v(" "),_("li",[_("code",[t._v("export命令")]),t._v("和"),_("code",[t._v("import命令")]),t._v("可出现在模块任何位置，只要处于模块顶层即可，不能处于块级作用域")]),t._v(" "),_("li",[_("code",[t._v("import()")]),t._v("加载模块成功后，此模块会作为一个对象，当作"),_("code",[t._v("then()")]),t._v("的参数，可使用"),_("code",[t._v("对象解构赋值")]),t._v("来获取输出接口")]),t._v(" "),_("li",[t._v("同时动态加载多个模块时，可使用"),_("code",[t._v("Promise.all()")]),t._v("和"),_("code",[t._v("import()")]),t._v("相结合来实现")]),t._v(" "),_("li",[_("code",[t._v("import()")]),t._v("和结合"),_("code",[t._v("async/await")]),t._v("来书写同步操作的代码")])]),t._v(" "),_("blockquote",[_("p",[t._v("单例模式：跨模块常量")])]),t._v(" "),_("div",{staticClass:"language-js line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-js"}},[_("code",[_("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 常量跨文件共享")]),t._v("\n"),_("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// person.js")]),t._v("\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NAME")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Bruce"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token constant"}},[t._v("AGE")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SEX")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[t._v('"male"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token constant"}},[t._v("AGE")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NAME")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SEX")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),_("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// file1.js")]),t._v("\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token constant"}},[t._v("AGE")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[t._v('"person"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token constant"}},[t._v("AGE")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),_("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// file2.js")]),t._v("\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token constant"}},[t._v("AGE")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NAME")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SEX")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[t._v('"person"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token constant"}},[t._v("AGE")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token constant"}},[t._v("NAME")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token constant"}},[t._v("SEX")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[t._v("1")]),_("br"),_("span",{staticClass:"line-number"},[t._v("2")]),_("br"),_("span",{staticClass:"line-number"},[t._v("3")]),_("br"),_("span",{staticClass:"line-number"},[t._v("4")]),_("br"),_("span",{staticClass:"line-number"},[t._v("5")]),_("br"),_("span",{staticClass:"line-number"},[t._v("6")]),_("br"),_("span",{staticClass:"line-number"},[t._v("7")]),_("br"),_("span",{staticClass:"line-number"},[t._v("8")]),_("br"),_("span",{staticClass:"line-number"},[t._v("9")]),_("br"),_("span",{staticClass:"line-number"},[t._v("10")]),_("br"),_("span",{staticClass:"line-number"},[t._v("11")]),_("br"),_("span",{staticClass:"line-number"},[t._v("12")]),_("br")])]),_("blockquote",[_("p",[t._v("默认导入互换整体导入")])]),t._v(" "),_("div",{staticClass:"language-js line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-js"}},[_("code",[_("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" Person "),_("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[t._v('"person"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Person"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),_("span",{pre:!0,attrs:{class:"token constant"}},[t._v("AGE")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("as")]),t._v(" Person "),_("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[t._v('"person"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Person"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("default"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),_("span",{pre:!0,attrs:{class:"token constant"}},[t._v("AGE")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[t._v("1")]),_("br"),_("span",{staticClass:"line-number"},[t._v("2")]),_("br"),_("span",{staticClass:"line-number"},[t._v("3")]),_("br"),_("span",{staticClass:"line-number"},[t._v("4")]),_("br")])]),_("h2",{attrs:{id:"iterator"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#iterator"}},[t._v("#")]),t._v(" Iterator")]),t._v(" "),_("p",[t._v("定义："),_("strong",[t._v("为各种不同的数据结构提供统一的访问机制")])]),t._v(" "),_("p",[t._v("原理："),_("strong",[t._v("创建一个指针指向首个成员，按照次序使用"),_("code",[t._v("next()")]),t._v("指向下一个成员，直接到结束位置")]),t._v("(数据结构只要部署"),_("code",[t._v("Iterator接口")]),t._v("就可完成遍历操作)")]),t._v(" "),_("p",[t._v("作用")]),t._v(" "),_("ul",[_("li",[t._v("为各种数据结构提供一个统一的简便的访问接口")]),t._v(" "),_("li",[t._v("使得数据结构成员能够按某种次序排列")]),t._v(" "),_("li",[t._v("ES6创造了新的遍历命令"),_("code",[t._v("for-of")]),t._v("，"),_("code",[t._v("Iterator接口")]),t._v("主要供"),_("code",[t._v("for-of")]),t._v("消费")])]),t._v(" "),_("p",[t._v("形式："),_("code",[t._v("for-of")]),t._v("(自动去寻找Iterator接口)")]),t._v(" "),_("p",[_("strong",[t._v("数据结构")])]),t._v(" "),_("ul",[_("li",[t._v("集合："),_("code",[t._v("Array")]),t._v("、"),_("code",[t._v("Object")]),t._v("、"),_("code",[t._v("Set")]),t._v("、"),_("code",[t._v("Map")])]),t._v(" "),_("li",[t._v("原生具备接口的数据结构："),_("code",[t._v("String")]),t._v("、"),_("code",[t._v("Array")]),t._v("、"),_("code",[t._v("Set")]),t._v("、"),_("code",[t._v("Map")]),t._v("、"),_("code",[t._v("TypedArray")]),t._v("、"),_("code",[t._v("Arguments")]),t._v("、"),_("code",[t._v("NodeList")])])]),t._v(" "),_("p",[t._v("部署："),_("strong",[t._v("默认部署在"),_("code",[t._v("Symbol.iterator")]),t._v("(具备此属性被认为"),_("code",[t._v("可遍历的iterable")]),t._v(")")])]),t._v(" "),_("p",[t._v("遍历器对象")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("next()")]),t._v("：下一步操作，返回"),_("code",[t._v("{ done, value }")]),t._v("(必须部署)")]),t._v(" "),_("li",[_("strong",[t._v("return()")]),t._v("："),_("code",[t._v("for-of")]),t._v("提前退出调用，返回"),_("code",[t._v("{ done: true }")])]),t._v(" "),_("li",[_("strong",[t._v("throw()")]),t._v("：不使用，配合"),_("code",[t._v("Generator函数")]),t._v("使用")])]),t._v(" "),_("h3",{attrs:{id:"forof循环"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#forof循环"}},[t._v("#")]),t._v(" ForOf循环")]),t._v(" "),_("p",[t._v("定义：调用"),_("code",[t._v("Iterator接口")]),t._v("产生遍历器对象("),_("code",[t._v("for-of")]),t._v("内部调用数据结构的"),_("code",[t._v("Symbol.iterator()")]),t._v(")")]),t._v(" "),_("p",[t._v("遍历字符串："),_("code",[t._v("for-in")]),t._v("获取"),_("code",[t._v("索引")]),t._v("，"),_("code",[t._v("for-of")]),t._v("获取"),_("code",[t._v("值")]),t._v("(可识别32位UTF-16字符)")]),t._v(" "),_("p",[t._v("遍历数组："),_("code",[t._v("for-in")]),t._v("获取"),_("code",[t._v("索引")]),t._v("，"),_("code",[t._v("for-of")]),t._v("获取"),_("code",[t._v("值")])]),t._v(" "),_("p",[t._v("遍历对象："),_("code",[t._v("for-in")]),t._v("获取"),_("code",[t._v("键")]),t._v("，"),_("code",[t._v("for-of")]),t._v("需自行部署")]),t._v(" "),_("p",[t._v("遍历Set："),_("code",[t._v("for-of")]),t._v("获取"),_("code",[t._v("值")]),t._v(" => "),_("code",[t._v("for (const v of set)")])]),t._v(" "),_("p",[t._v("遍历Map："),_("code",[t._v("for-of")]),t._v("获取"),_("code",[t._v("键值对")]),t._v(" =>  "),_("code",[t._v("for (const [k, v] of map)")])]),t._v(" "),_("p",[t._v("遍历类数组："),_("code",[t._v("包含length的对象")]),t._v("、"),_("code",[t._v("Arguments对象")]),t._v("、"),_("code",[t._v("NodeList对象")]),t._v("(无"),_("code",[t._v("Iterator接口的类数组")]),t._v("可用"),_("code",[t._v("Array.from()")]),t._v("转换)")]),t._v(" "),_("p",[_("strong",[t._v("计算生成数据结构")]),t._v("： "),_("code",[t._v("Array")]),t._v("、"),_("code",[t._v("Set")]),t._v("、 "),_("code",[t._v("Map")])]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("keys()")]),t._v("：返回遍历器对象，遍历所有的键")]),t._v(" "),_("li",[_("strong",[t._v("values()")]),t._v("：返回遍历器对象，遍历所有的值")]),t._v(" "),_("li",[_("strong",[t._v("entries()")]),t._v("：返回遍历器对象，遍历所有的键值对")])]),t._v(" "),_("p",[_("strong",[t._v("与 "),_("code",[t._v("for-in")]),t._v("区别")])]),t._v(" "),_("ul",[_("li",[t._v("有着同"),_("code",[t._v("for-in")]),t._v("一样的简洁语法，"),_("strong",[t._v("但没有"),_("code",[t._v("for-in")]),t._v("那些缺点")])]),t._v(" "),_("li",[t._v("不同于"),_("code",[t._v("forEach()")]),t._v("，"),_("strong",[t._v("它可与"),_("code",[t._v("break")]),t._v("、"),_("code",[t._v("continue")]),t._v("和"),_("code",[t._v("return")]),t._v("配合使用")])]),t._v(" "),_("li",[t._v("提供遍历所有数据结构的统一操作接口")])]),t._v(" "),_("h3",{attrs:{id:"应用场景"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#应用场景"}},[t._v("#")]),t._v(" 应用场景")]),t._v(" "),_("ul",[_("li",[t._v("改写具有"),_("code",[t._v("Iterator接口")]),t._v("的数据结构的"),_("code",[t._v("Symbol.iterator")])]),t._v(" "),_("li",[t._v("解构赋值：对Set进行结构")]),t._v(" "),_("li",[t._v("扩展运算符：将部署"),_("code",[t._v("Iterator接口")]),t._v("的数据结构转为数组")]),t._v(" "),_("li",[t._v("yield*："),_("code",[t._v("yield*")]),t._v("后跟一个可遍历的数据结构，会调用其遍历器接口")]),t._v(" "),_("li",[t._v("接受数组作为参数的函数："),_("code",[t._v("for-of")]),t._v("、"),_("code",[t._v("Array.from()")]),t._v("、"),_("code",[t._v("new Set()")]),t._v("、"),_("code",[t._v("new WeakSet()")]),t._v("、"),_("code",[t._v("new Map()")]),t._v("、"),_("code",[t._v("new WeakMap()")]),t._v("、"),_("code",[t._v("Promise.all()")]),t._v("、"),_("code",[t._v("Promise.race()")])])]),t._v(" "),_("h2",{attrs:{id:"promise"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#promise"}},[t._v("#")]),t._v(" Promise")]),t._v(" "),_("p",[t._v("定义：包含异步操作结果的对象")]),t._v(" "),_("p",[t._v("状态")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("进行中")]),t._v("："),_("code",[t._v("pending")])]),t._v(" "),_("li",[_("strong",[t._v("已成功")]),t._v("："),_("code",[t._v("resolved")])]),t._v(" "),_("li",[_("strong",[t._v("已失败")]),t._v("："),_("code",[t._v("rejected")])])]),t._v(" "),_("p",[t._v("特点")]),t._v(" "),_("ul",[_("li",[t._v("对象的状态不受外界影响")]),t._v(" "),_("li",[t._v("一旦状态改变就不会再变，任何时候都可得到这个结果")])]),t._v(" "),_("p",[t._v("声明："),_("code",[t._v("new Promise((resolve, reject) => {})")])]),t._v(" "),_("p",[t._v("出参")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("resolve")]),t._v("：将状态从"),_("code",[t._v("未完成")]),t._v("变为"),_("code",[t._v("成功")]),t._v("，在异步操作成功时调用，并将异步操作的结果作为参数传递出去")]),t._v(" "),_("li",[_("strong",[t._v("reject")]),t._v("：将状态从"),_("code",[t._v("未完成")]),t._v("变为"),_("code",[t._v("失败")]),t._v("，在异步操作失败时调用，并将异步操作的错误作为参数传递出去")])]),t._v(" "),_("h3",{attrs:{id:"方法"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[t._v("#")]),t._v(" 方法")]),t._v(" "),_("ul",[_("li",[_("p",[t._v("then()：分别指定 "),_("code",[t._v("resolved状态")]),t._v("和 "),_("code",[t._v("rejected状态")]),t._v("的回调函数")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("第一参数")]),t._v("：状态变为"),_("code",[t._v("resolved")]),t._v("时调用")])])]),t._v(" "),_("li",[_("p",[_("strong",[t._v("第二参数")]),t._v("：状态变为"),_("code",[t._v("rejected")]),t._v("时调用(可选)")])]),t._v(" "),_("li",[_("p",[_("strong",[t._v("catch()")]),t._v("：指定发生错误时的回调函数")])]),t._v(" "),_("li",[_("p",[t._v("Promise.all()：将多个实例包装成一个新实例，返回全部实例状态变更后的结果数组(齐变更再返回)")]),t._v(" "),_("ul",[_("li",[t._v("入参：具有"),_("code",[t._v("Iterator接口")]),t._v("的数据结构")])])]),t._v(" "),_("li",[_("p",[t._v("成功：只有全部实例状态变成"),_("code",[t._v("resolved")]),t._v("，最终状态才会变成"),_("code",[t._v("resolved")])]),t._v(" "),_("ul",[_("li",[t._v("失败：其中一个实例状态变成"),_("code",[t._v("rejected")]),t._v("，最终状态就会变成"),_("code",[t._v("rejected")])])])]),t._v(" "),_("li",[_("p",[_("strong",[t._v("Promise.race()")]),t._v("：将多个实例包装成一个新实例，返回全部实例状态优先变更后的结果(先变更先返回)")])]),t._v(" "),_("li",[_("p",[t._v("Promise.resolve()：将对象转为Promise对象(等价于 "),_("code",[t._v("new Promise(resolve => resolve())")]),t._v(")")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("Promise实例")]),t._v("：原封不动地返回入参")])])]),t._v(" "),_("li",[_("p",[_("strong",[t._v("Thenable对象")]),t._v("：将此对象转为Promise对象并返回(Thenable为包含"),_("code",[t._v("then()")]),t._v("的对象，执行"),_("code",[t._v("then()")]),t._v("相当于执行此对象的"),_("code",[t._v("then()")]),t._v(")")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("不具有then()的对象")]),t._v("：将此对象转为Promise对象并返回，状态为"),_("code",[t._v("resolved")])]),t._v(" "),_("li",[_("strong",[t._v("不带参数")]),t._v("：返回Promise对象，状态为"),_("code",[t._v("resolved")])])])]),t._v(" "),_("li",[_("p",[_("strong",[t._v("Promise.reject()")]),t._v("：将对象转为状态为"),_("code",[t._v("rejected")]),t._v("的Promise对象(等价于"),_("code",[t._v("new Promise((resolve, reject) => reject())")]),t._v(")")])])]),t._v(" "),_("h3",{attrs:{id:"应用场景-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#应用场景-2"}},[t._v("#")]),t._v(" 应用场景")]),t._v(" "),_("ul",[_("li",[t._v("加载图片")]),t._v(" "),_("li",[t._v("AJAX转Promise对象")])]),t._v(" "),_("h3",{attrs:{id:"重点难点-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#重点难点-2"}},[t._v("#")]),t._v(" 重点难点")]),t._v(" "),_("ul",[_("li",[t._v("只有异步操作的结果可决定当前状态是哪一种，其他操作都无法改变这个状态")]),t._v(" "),_("li",[t._v("状态改变只有两种可能：从"),_("code",[t._v("pending")]),t._v("变为"),_("code",[t._v("resolved")]),t._v("、从"),_("code",[t._v("pending")]),t._v("变为"),_("code",[t._v("rejected")])]),t._v(" "),_("li",[t._v("一旦新建"),_("code",[t._v("Promise对象")]),t._v("就会立即执行，无法中途取消")]),t._v(" "),_("li",[t._v("不设置回调函数，内部抛错不会反应到外部")]),t._v(" "),_("li",[t._v("当处于"),_("code",[t._v("pending")]),t._v("时，无法得知目前进展到哪一个阶段")]),t._v(" "),_("li",[t._v("实例状态变为"),_("code",[t._v("resolved")]),t._v("或"),_("code",[t._v("rejected")]),t._v("时，会触发"),_("code",[t._v("then()")]),t._v("绑定的回调函数")]),t._v(" "),_("li",[_("code",[t._v("resolve()")]),t._v("和"),_("code",[t._v("reject()")]),t._v("的执行总是晚于本轮循环的同步任务")]),t._v(" "),_("li",[_("code",[t._v("then()")]),t._v("返回新实例，其后可再调用另一个"),_("code",[t._v("then()")])]),t._v(" "),_("li",[_("code",[t._v("then()")]),t._v("运行中抛出错误会被"),_("code",[t._v("catch()")]),t._v("捕获")]),t._v(" "),_("li",[_("code",[t._v("reject()")]),t._v("的作用等同于抛出错误")]),t._v(" "),_("li",[t._v("实例状态已变成"),_("code",[t._v("resolved")]),t._v("时，再抛出错误是无效的，不会被捕获，等于没有抛出")]),t._v(" "),_("li",[t._v("实例状态的错误具有"),_("code",[t._v("冒泡")]),t._v("性质，会一直向后传递直到被捕获为止，错误总是会被下一个"),_("code",[t._v("catch()")]),t._v("捕获")]),t._v(" "),_("li",[t._v("不要在"),_("code",[t._v("then()")]),t._v("里定义"),_("code",[t._v("rejected")]),t._v("状态的回调函数(不使用其第二参数)")]),t._v(" "),_("li",[t._v("建议使用"),_("code",[t._v("catch()")]),t._v("捕获错误，不要使用"),_("code",[t._v("then()")]),t._v("第二个参数捕获")]),t._v(" "),_("li",[t._v("没有使用"),_("code",[t._v("catch()")]),t._v("捕获错误，实例抛错不会传递到外层代码，即"),_("code",[t._v("不会有任何反应")])]),t._v(" "),_("li",[t._v("作为参数的实例定义了"),_("code",[t._v("catch()")]),t._v("，一旦被"),_("code",[t._v("rejected")]),t._v("并不会触发"),_("code",[t._v("Promise.all()")]),t._v("的"),_("code",[t._v("catch()")])]),t._v(" "),_("li",[_("code",[t._v("Promise.reject()")]),t._v("的参数会原封不动地作为"),_("code",[t._v("rejected")]),t._v("的理由，变成后续方法的参数")])]),t._v(" "),_("h2",{attrs:{id:"generator"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#generator"}},[t._v("#")]),t._v(" Generator")]),t._v(" "),_("blockquote",[_("p",[t._v("封装多个内部状态的异步编程解决方案;\n生成器（generators)是一个能返回一个迭代器的函数。\n生成器函数也是一种函数，"),_("strong",[t._v("最直观的表现就是比普通的function多了个星号")]),t._v("*，在其函数体内可以使用yield关键字，有意思的是函数会在每个yield后停顿。")])]),t._v(" "),_("p",[t._v("形式：调用"),_("code",[t._v("Generator函数")]),t._v("(该函数不执行)返回指向内部状态的指针对象(不是运行结果)")]),t._v(" "),_("p",[t._v("声明："),_("code",[t._v("function* Func() {}")])]),t._v(" "),_("p",[t._v("方法")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("next()")]),t._v("：使指针移向下一个状态，返回"),_("code",[t._v("{ done, value }")]),t._v("(入参会被当作上一个"),_("code",[t._v("yield命令表达式")]),t._v("的返回值)")]),t._v(" "),_("li",[_("strong",[t._v("return()")]),t._v("：返回指定值且终结遍历"),_("code",[t._v("Generator函数")]),t._v("，返回"),_("code",[t._v("{ done: true, value: 入参 }")])]),t._v(" "),_("li",[_("strong",[t._v("throw()")]),t._v("：在"),_("code",[t._v("Generator函数")]),t._v("体外抛出错误，在"),_("code",[t._v("Generator函数")]),t._v("体内捕获错误，返回自定义的"),_("code",[t._v("new Errow()")])])]),t._v(" "),_("p",[_("strong",[t._v("yield命令")]),t._v("：声明内部状态的值( "),_("code",[t._v("return")]),t._v("声明结束返回的值)")]),t._v(" "),_("ul",[_("li",[t._v("遇到"),_("code",[t._v("yield命令")]),t._v("就暂停执行后面的操作，并将其后表达式的值作为返回对象的"),_("code",[t._v("value")])]),t._v(" "),_("li",[t._v("下次调用"),_("code",[t._v("next()")]),t._v("时，再继续往下执行直到遇到下一个"),_("code",[t._v("yield命令")])]),t._v(" "),_("li",[t._v("没有再遇到"),_("code",[t._v("yield命令")]),t._v("就一直运行到"),_("code",[t._v("Generator函数")]),t._v("结束，直到遇到"),_("code",[t._v("return语句")]),t._v("为止并将其后表达式的值作为返回对象的"),_("code",[t._v("value")])]),t._v(" "),_("li",[_("code",[t._v("Generator函数")]),t._v("没有"),_("code",[t._v("return语句")]),t._v("则返回对象的"),_("code",[t._v("value")]),t._v("为"),_("code",[t._v("undefined")])])]),t._v(" "),_("p",[_("strong",[t._v("yield*命令")]),t._v("：在一个"),_("code",[t._v("Generator函数")]),t._v("里执行另一个"),_("code",[t._v("Generator函数")]),t._v("(后随具有"),_("code",[t._v("Iterator接口")]),t._v("的数据结构)")]),t._v(" "),_("p",[t._v("遍历：通过"),_("code",[t._v("for-of")]),t._v("自动调用"),_("code",[t._v("next()")])]),t._v(" "),_("p",[t._v("作为对象属性")]),t._v(" "),_("ul",[_("li",[t._v("全写："),_("code",[t._v("const obj = { method: function*() {} }")])]),t._v(" "),_("li",[t._v("简写："),_("code",[t._v("const obj = { * method() {} }")])])]),t._v(" "),_("p",[t._v("上下文：执行产生的"),_("code",[t._v("上下文环境")]),t._v("一旦遇到"),_("code",[t._v("yield命令")]),t._v("就会暂时退出堆栈(但并不消失)，所有变量和对象会冻结在"),_("code",[t._v("当前状态")]),t._v("，等到对它执行"),_("code",[t._v("next()")]),t._v("时，这个"),_("code",[t._v("上下文环境")]),t._v("又会重新加入调用栈，冻结的变量和对象恢复执行")]),t._v(" "),_("h3",{attrs:{id:"方法异同"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#方法异同"}},[t._v("#")]),t._v(" 方法异同")]),t._v(" "),_("ul",[_("li",[t._v("相同点："),_("code",[t._v("next()")]),t._v("、"),_("code",[t._v("throw()")]),t._v("、"),_("code",[t._v("return()")]),t._v("本质上是同一件事，作用都是让函数恢复执行且使用不同的语句替换"),_("code",[t._v("yield命令")])]),t._v(" "),_("li",[t._v("不同点\n"),_("ul",[_("li",[_("strong",[t._v("next()")]),t._v("：将"),_("code",[t._v("yield命令")]),t._v("替换成一个"),_("code",[t._v("值")])]),t._v(" "),_("li",[_("strong",[t._v("return()")]),t._v("：将"),_("code",[t._v("yield命令")]),t._v("替换成一个"),_("code",[t._v("return语句")])]),t._v(" "),_("li",[_("strong",[t._v("throw()")]),t._v("：将"),_("code",[t._v("yield命令")]),t._v("替换成一个"),_("code",[t._v("throw语句")])])])])]),t._v(" "),_("h3",{attrs:{id:"应用场景-3"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#应用场景-3"}},[t._v("#")]),t._v(" 应用场景")]),t._v(" "),_("ul",[_("li",[t._v("异步操作同步化表达")]),t._v(" "),_("li",[t._v("控制流管理")]),t._v(" "),_("li",[t._v("为对象部署Iterator接口：把"),_("code",[t._v("Generator函数")]),t._v("赋值给对象的"),_("code",[t._v("Symbol.iterator")]),t._v("，从而使该对象具有"),_("code",[t._v("Iterator接口")])]),t._v(" "),_("li",[t._v("作为具有Iterator接口的数据结构")])]),t._v(" "),_("h3",{attrs:{id:"重点难点-3"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#重点难点-3"}},[t._v("#")]),t._v(" 重点难点")]),t._v(" "),_("ul",[_("li",[t._v("每次调用"),_("code",[t._v("next()")]),t._v("，指针就从"),_("code",[t._v("函数头部")]),t._v("或"),_("code",[t._v("上次停下的位置")]),t._v("开始执行，直到遇到下一个"),_("code",[t._v("yield命令")]),t._v("或"),_("code",[t._v("return语句")]),t._v("为止")]),t._v(" "),_("li",[t._v("函数内部可不用"),_("code",[t._v("yield命令")]),t._v("，但会变成单纯的"),_("code",[t._v("暂缓执行函数")]),t._v("(还是需要"),_("code",[t._v("next()")]),t._v("触发)")]),t._v(" "),_("li",[_("code",[t._v("yield命令")]),t._v("是暂停执行的标记，"),_("code",[t._v("next()")]),t._v("是恢复执行的操作")]),t._v(" "),_("li",[_("code",[t._v("yield命令")]),t._v("用在另一个表达式中必须放在"),_("code",[t._v("圆括号")]),t._v("里")]),t._v(" "),_("li",[_("code",[t._v("yield命令")]),t._v("用作函数参数或放在赋值表达式的右边，可不加"),_("code",[t._v("圆括号")])]),t._v(" "),_("li",[_("code",[t._v("yield命令")]),t._v("本身没有返回值，可认为是返回"),_("code",[t._v("undefined")])]),t._v(" "),_("li",[_("code",[t._v("yield命令表达式")]),t._v("为惰性求值，等"),_("code",[t._v("next()")]),t._v("执行到此才求值")]),t._v(" "),_("li",[t._v("函数调用后生成遍历器对象，此对象的"),_("code",[t._v("Symbol.iterator")]),t._v("是此对象本身")]),t._v(" "),_("li",[t._v("在函数运行的不同阶段，通过"),_("code",[t._v("next()")]),t._v("从外部向内部注入不同的值，从而调整函数行为")]),t._v(" "),_("li",[t._v("首个"),_("code",[t._v("next()")]),t._v("用来启动遍历器对象，后续才可传递参数")]),t._v(" "),_("li",[t._v("想首次调用"),_("code",[t._v("next()")]),t._v("时就能输入值，可在函数外面再包一层")]),t._v(" "),_("li",[t._v("一旦"),_("code",[t._v("next()")]),t._v("返回对象的"),_("code",[t._v("done")]),t._v("为"),_("code",[t._v("true")]),t._v("，"),_("code",[t._v("for-of")]),t._v("遍历会中止且不包含该返回对象")]),t._v(" "),_("li",[t._v("函数内部部署"),_("code",[t._v("try-finally")]),t._v("且正在执行"),_("code",[t._v("try")]),t._v("，那么"),_("code",[t._v("return()")]),t._v("会导致立刻进入"),_("code",[t._v("finally")]),t._v("，执行完"),_("code",[t._v("finally")]),t._v("以后整个函数才会结束")]),t._v(" "),_("li",[t._v("函数内部没有部署"),_("code",[t._v("try-catch")]),t._v("，"),_("code",[t._v("throw()")]),t._v("抛错将被外部"),_("code",[t._v("try-catch")]),t._v("捕获")]),t._v(" "),_("li",[_("code",[t._v("throw()")]),t._v("抛错要被内部捕获，前提是必须"),_("code",[t._v("至少执行过一次next()")])]),t._v(" "),_("li",[_("code",[t._v("throw()")]),t._v("被捕获以后，会附带执行下一条"),_("code",[t._v("yield命令")])]),t._v(" "),_("li",[t._v("函数还未开始执行，这时"),_("code",[t._v("throw()")]),t._v("抛错只可能抛出在函数外部")])]),t._v(" "),_("blockquote",[_("p",[t._v("首次next()可传值")])]),t._v(" "),_("div",{staticClass:"language-js line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-js"}},[_("code",[_("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("Wrapper")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("func")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),_("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token parameter"}},[_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("args")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),_("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" generator "),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("func")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("args"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        generator"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),_("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" generator"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" print "),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("Wrapper")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token template-string"}},[_("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),_("span",{pre:!0,attrs:{class:"token string"}},[t._v("First Input: ")]),_("span",{pre:!0,attrs:{class:"token interpolation"}},[_("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),_("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),_("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),_("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),_("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token string"}},[t._v('"done"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[t._v("1")]),_("br"),_("span",{staticClass:"line-number"},[t._v("2")]),_("br"),_("span",{staticClass:"line-number"},[t._v("3")]),_("br"),_("span",{staticClass:"line-number"},[t._v("4")]),_("br"),_("span",{staticClass:"line-number"},[t._v("5")]),_("br"),_("span",{staticClass:"line-number"},[t._v("6")]),_("br"),_("span",{staticClass:"line-number"},[t._v("7")]),_("br"),_("span",{staticClass:"line-number"},[t._v("8")]),_("br"),_("span",{staticClass:"line-number"},[t._v("9")]),_("br"),_("span",{staticClass:"line-number"},[t._v("10")]),_("br"),_("span",{staticClass:"line-number"},[t._v("11")]),_("br"),_("span",{staticClass:"line-number"},[t._v("12")]),_("br")])]),_("div",{staticClass:"language-js line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-js"}},[_("code",[_("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("createIterator")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),_("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 生成器")]),t._v("\n  "),_("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),_("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),_("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" iterator "),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("createIterator")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),_("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 生成器能像正规函数那样被调用，但会返回一个迭代器")]),t._v("\nconsole"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iterator"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\nconsole"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iterator"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\nconsole"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("iterator"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("value"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 3")]),t._v("\n")])]),t._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[t._v("1")]),_("br"),_("span",{staticClass:"line-number"},[t._v("2")]),_("br"),_("span",{staticClass:"line-number"},[t._v("3")]),_("br"),_("span",{staticClass:"line-number"},[t._v("4")]),_("br"),_("span",{staticClass:"line-number"},[t._v("5")]),_("br"),_("span",{staticClass:"line-number"},[t._v("6")]),_("br"),_("span",{staticClass:"line-number"},[t._v("7")]),_("br"),_("span",{staticClass:"line-number"},[t._v("8")]),_("br"),_("span",{staticClass:"line-number"},[t._v("9")]),_("br")])]),_("div",{staticClass:"language-js line-numbers-mode"},[_("pre",{pre:!0,attrs:{class:"language-js"}},[_("code",[_("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//需要一个能够调用生成器并启动迭代器的方法")]),t._v("\n"),_("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("run")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("taskDef")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n　　"),_("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// taskDef 即一个生成器函数; 创建迭代器，让它在别处可用")]),t._v("\n　　"),_("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" task "),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("taskDef")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n　　"),_("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" result "),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" task"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),_("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 启动任务")]),t._v("\n　　"),_("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("step")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),_("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 递归使用函数来保持对 next() 的调用")]),t._v("\n　　　　"),_("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("result"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("done"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("　"),_("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果还有更多要做的")]),t._v("\n　　　　　　result "),_("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" task"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("next")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n　　　　　　"),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("step")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n　　　　"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n　　"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n　　"),_("span",{pre:!0,attrs:{class:"token function"}},[t._v("step")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),_("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 开始处理过程")]),t._v("\n"),_("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),_("div",{staticClass:"line-numbers-wrapper"},[_("span",{staticClass:"line-number"},[t._v("1")]),_("br"),_("span",{staticClass:"line-number"},[t._v("2")]),_("br"),_("span",{staticClass:"line-number"},[t._v("3")]),_("br"),_("span",{staticClass:"line-number"},[t._v("4")]),_("br"),_("span",{staticClass:"line-number"},[t._v("5")]),_("br"),_("span",{staticClass:"line-number"},[t._v("6")]),_("br"),_("span",{staticClass:"line-number"},[t._v("7")]),_("br"),_("span",{staticClass:"line-number"},[t._v("8")]),_("br"),_("span",{staticClass:"line-number"},[t._v("9")]),_("br"),_("span",{staticClass:"line-number"},[t._v("10")]),_("br"),_("span",{staticClass:"line-number"},[t._v("11")]),_("br"),_("span",{staticClass:"line-number"},[t._v("12")]),_("br"),_("span",{staticClass:"line-number"},[t._v("13")]),_("br")])]),_("h2",{attrs:{id:"es2016"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#es2016"}},[t._v("#")]),t._v(" ES2016")]),t._v(" "),_("h3",{attrs:{id:"数值扩展"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数值扩展"}},[t._v("#")]),t._v(" 数值扩展")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("指数运算符(**)")]),t._v("：数值求幂(相当于"),_("code",[t._v("Math.pow()")]),t._v(")")])]),t._v(" "),_("h3",{attrs:{id:"数组扩展"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数组扩展"}},[t._v("#")]),t._v(" 数组扩展")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("includes()")]),t._v("：是否存在指定成员")])]),t._v(" "),_("h2",{attrs:{id:"es2017"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#es2017"}},[t._v("#")]),t._v(" ES2017")]),t._v(" "),_("h3",{attrs:{id:"声明"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#声明"}},[t._v("#")]),t._v(" 声明")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("共享内存和原子操作")]),t._v("：由全局对象"),_("code",[t._v("SharedArrayBuffer")]),t._v("和"),_("code",[t._v("Atomics")]),t._v("实现，将数据存储在一块共享内存空间中，这些数据可在"),_("code",[t._v("JS主线程")]),t._v("和"),_("code",[t._v("web-worker线程")]),t._v("之间共享")])]),t._v(" "),_("h3",{attrs:{id:"字符串扩展"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#字符串扩展"}},[t._v("#")]),t._v(" 字符串扩展")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("padStart()")]),t._v("：把指定字符串填充到字符串头部，返回新字符串")]),t._v(" "),_("li",[_("strong",[t._v("padEnd()")]),t._v("：把指定字符串填充到字符串尾部，返回新字符串")])]),t._v(" "),_("h3",{attrs:{id:"对象扩展"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#对象扩展"}},[t._v("#")]),t._v(" 对象扩展")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("Object.getOwnPropertyDescriptors()")]),t._v("：返回对象所有自身属性(非继承属性)的描述对象")]),t._v(" "),_("li",[_("strong",[t._v("Object.values()")]),t._v("：返回以值组成的数组")]),t._v(" "),_("li",[_("strong",[t._v("Object.entries()")]),t._v("：返回以键和值组成的数组")])]),t._v(" "),_("h3",{attrs:{id:"函数扩展"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#函数扩展"}},[t._v("#")]),t._v(" 函数扩展")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("函数参数尾逗号")]),t._v("：允许函数最后一个参数有尾逗号")])]),t._v(" "),_("h3",{attrs:{id:"async"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#async"}},[t._v("#")]),t._v(" Async")]),t._v(" "),_("p",[t._v("定义：使异步函数以同步函数的形式书写(Generator函数语法糖)")]),t._v(" "),_("p",[t._v("原理：将"),_("code",[t._v("Generator函数")]),t._v("和自动执行器"),_("code",[t._v("spawn")]),t._v("包装在一个函数里")]),t._v(" "),_("p",[t._v("形式：将"),_("code",[t._v("Generator函数")]),t._v("的"),_("code",[t._v("*")]),t._v("替换成"),_("code",[t._v("async")]),t._v("，将"),_("code",[t._v("yield")]),t._v("替换成"),_("code",[t._v("await")])]),t._v(" "),_("p",[t._v("声明")]),t._v(" "),_("ul",[_("li",[t._v("具名函数："),_("code",[t._v("async function Func() {}")])]),t._v(" "),_("li",[t._v("函数表达式："),_("code",[t._v("const func = async function() {}")])]),t._v(" "),_("li",[t._v("箭头函数："),_("code",[t._v("const func = async() => {}")])]),t._v(" "),_("li",[t._v("对象方法："),_("code",[t._v("const obj = { async func() {} }")])]),t._v(" "),_("li",[t._v("类方法："),_("code",[t._v("class Cla { async Func() {} }")])])]),t._v(" "),_("p",[t._v("await命令：等待当前Promise对象状态变更完毕")]),t._v(" "),_("ul",[_("li",[t._v("正常情况：后面是Promise对象则返回其结果，否则返回对应的值")]),t._v(" "),_("li",[t._v("后随"),_("code",[t._v("Thenable对象")]),t._v("：将其等同于Promise对象返回其结果")])]),t._v(" "),_("p",[t._v("错误处理：将"),_("code",[t._v("await命令Promise对象")]),t._v("放到"),_("code",[t._v("try-catch")]),t._v("中(可放多个)")]),t._v(" "),_("h4",{attrs:{id:"async对generator改进"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#async对generator改进"}},[t._v("#")]),t._v(" Async对Generator改进")]),t._v(" "),_("ul",[_("li",[t._v("内置执行器")]),t._v(" "),_("li",[t._v("更好的语义")]),t._v(" "),_("li",[t._v("更广的适用性")]),t._v(" "),_("li",[t._v("返回值是Promise对象")])]),t._v(" "),_("h4",{attrs:{id:"应用场景-4"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#应用场景-4"}},[t._v("#")]),t._v(" 应用场景")]),t._v(" "),_("ul",[_("li",[t._v("按顺序完成异步操作")])]),t._v(" "),_("h4",{attrs:{id:"重点难点-4"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#重点难点-4"}},[t._v("#")]),t._v(" 重点难点")]),t._v(" "),_("ul",[_("li",[_("code",[t._v("Async函数")]),t._v("返回"),_("code",[t._v("Promise对象")]),t._v("，可使用"),_("code",[t._v("then()")]),t._v("添加回调函数")]),t._v(" "),_("li",[t._v("内部"),_("code",[t._v("return返回值")]),t._v("会成为后续"),_("code",[t._v("then()")]),t._v("的出参")]),t._v(" "),_("li",[t._v("内部抛出错误会导致返回的Promise对象变为"),_("code",[t._v("rejected状态")]),t._v("，被"),_("code",[t._v("catch()")]),t._v("接收到")]),t._v(" "),_("li",[t._v("返回的Promise对象必须等到内部所有"),_("code",[t._v("await命令Promise对象")]),t._v("执行完才会发生状态改变，除非遇到"),_("code",[t._v("return语句")]),t._v("或"),_("code",[t._v("抛出错误")])]),t._v(" "),_("li",[t._v("任何一个"),_("code",[t._v("await命令Promise对象")]),t._v("变为"),_("code",[t._v("rejected状态")]),t._v("，整个"),_("code",[t._v("Async函数")]),t._v("都会中断执行")]),t._v(" "),_("li",[t._v("希望即使前一个异步操作失败也不要中断后面的异步操作\n"),_("ul",[_("li",[t._v("将"),_("code",[t._v("await命令Promise对象")]),t._v("放到"),_("code",[t._v("try-catch")]),t._v("中")]),t._v(" "),_("li",[_("code",[t._v("await命令Promise对象")]),t._v("跟一个"),_("code",[t._v("catch()")])])])]),t._v(" "),_("li",[_("code",[t._v("await命令Promise对象")]),t._v("可能变为"),_("code",[t._v("rejected状态")]),t._v("，最好把其放到"),_("code",[t._v("try-catch")]),t._v("中")]),t._v(" "),_("li",[t._v("多个"),_("code",[t._v("await命令Promise对象")]),t._v("若不存在继发关系，最好让它们同时触发")]),t._v(" "),_("li",[_("code",[t._v("await命令")]),t._v("只能用在"),_("code",[t._v("Async函数")]),t._v("之中，否则会报错")]),t._v(" "),_("li",[t._v("数组使用"),_("code",[t._v("forEach()")]),t._v("执行"),_("code",[t._v("async/await")]),t._v("会失效，可使用"),_("code",[t._v("for-of")]),t._v("和"),_("code",[t._v("Promise.all()")]),t._v("代替")]),t._v(" "),_("li",[t._v("可保留运行堆栈，函数上下文随着"),_("code",[t._v("Async函数")]),t._v("的执行而存在，执行完成就消失")])]),t._v(" "),_("h2",{attrs:{id:"es2018"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#es2018"}},[t._v("#")]),t._v(" ES2018")]),t._v(" "),_("h3",{attrs:{id:"字符串扩展-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#字符串扩展-2"}},[t._v("#")]),t._v(" 字符串扩展")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("放松对标签模板里字符串转义的限制")]),t._v("：遇到不合法的字符串转义返回"),_("code",[t._v("undefined")]),t._v("，并且从"),_("code",[t._v("raw")]),t._v("上可获取原字符串")])]),t._v(" "),_("h3",{attrs:{id:"对象扩展-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#对象扩展-2"}},[t._v("#")]),t._v(" 对象扩展")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("扩展运算符(...)")]),t._v("：转换对象为用逗号分隔的参数序列("),_("code",[t._v("{ ...obj }")]),t._v("，相当于"),_("code",[t._v("rest/spread参数")]),t._v("的逆运算)")])]),t._v(" "),_("h4",{attrs:{id:"扩展应用"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#扩展应用"}},[t._v("#")]),t._v(" 扩展应用")]),t._v(" "),_("ul",[_("li",[t._v("克隆对象："),_("code",[t._v("const obj = { __proto__: Object.getPrototypeOf(obj1), ...obj1 }")])]),t._v(" "),_("li",[t._v("合并对象："),_("code",[t._v("const obj = { ...obj1, ...obj2 }")])]),t._v(" "),_("li",[t._v("转换字符串为对象："),_("code",[t._v('{ ..."hello" }')])]),t._v(" "),_("li",[t._v("转换数组为对象："),_("code",[t._v("{ ...[1, 2] }")])]),t._v(" "),_("li",[t._v("与对象解构赋值结合："),_("code",[t._v("const { x, ...rest/spread } = { x: 1, y: 2, z: 3 }")]),t._v("(不能复制继承自原型对象的属性)")]),t._v(" "),_("li",[t._v("修改现有对象部分属性："),_("code",[t._v("const obj = { x: 1, ...{ x: 2 } }")])])]),t._v(" "),_("h3",{attrs:{id:"正则扩展"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#正则扩展"}},[t._v("#")]),t._v(" 正则扩展")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("s修饰符")]),t._v("：dotAll模式修饰符，使"),_("code",[t._v(".")]),t._v("匹配任意单个字符("),_("code",[t._v("dotAll模式")]),t._v(")")]),t._v(" "),_("li",[_("strong",[t._v("dotAll")]),t._v("：是否设置"),_("code",[t._v("s修饰符")])]),t._v(" "),_("li",[_("strong",[t._v("后行断言")]),t._v("："),_("code",[t._v("x")]),t._v("只有在"),_("code",[t._v("y")]),t._v("后才匹配")]),t._v(" "),_("li",[_("strong",[t._v("后行否定断言")]),t._v("："),_("code",[t._v("x")]),t._v("只有不在"),_("code",[t._v("y")]),t._v("后才匹配")]),t._v(" "),_("li",[t._v("Unicode属性转义：匹配符合 "),_("code",[t._v("Unicode某种属性")]),t._v("的所有字符\n"),_("ul",[_("li",[t._v("正向匹配："),_("code",[t._v("\\p{PropRule}")])]),t._v(" "),_("li",[t._v("反向匹配："),_("code",[t._v("\\P{PropRule}")])]),t._v(" "),_("li",[t._v("限制："),_("code",[t._v("\\p{...}")]),t._v("和"),_("code",[t._v("\\P{...}")]),t._v("只对"),_("code",[t._v("Unicode字符")]),t._v("有效，使用时需加上"),_("code",[t._v("u修饰符")])])])]),t._v(" "),_("li",[t._v("具名组匹配：为每组匹配指定名字( "),_("code",[t._v("?<GroupName>")]),t._v(")\n"),_("ul",[_("li",[t._v("形式："),_("code",[t._v("str.exec().groups.GroupName")])]),t._v(" "),_("li",[t._v("解构赋值替换\n"),_("ul",[_("li",[t._v("声明："),_("code",[t._v('const time = "2017-09-11"')]),t._v("、"),_("code",[t._v("const regexp = /(?\\d{4})-(?\\d{2})-(?\\d{2})/u")])]),t._v(" "),_("li",[t._v("匹配："),_("code",[t._v('time.replace(regexp, "$/$/$")')])])])])])])]),t._v(" "),_("h3",{attrs:{id:"promise-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#promise-2"}},[t._v("#")]),t._v(" Promise")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("finally()")]),t._v("：指定不管最后状态如何都会执行的回调函数")])]),t._v(" "),_("h3",{attrs:{id:"async-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#async-2"}},[t._v("#")]),t._v(" Async")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("异步迭代器(for-await-of)")]),t._v("：，循环等待每个"),_("code",[t._v("Promise对象")]),t._v("变为"),_("code",[t._v("resolved状态")]),t._v("才进入下一步")])]),t._v(" "),_("h2",{attrs:{id:"es2019"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#es2019"}},[t._v("#")]),t._v(" ES2019")]),t._v(" "),_("h3",{attrs:{id:"字符串扩展-3"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#字符串扩展-3"}},[t._v("#")]),t._v(" 字符串扩展")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("直接输入U+2028和U+2029")]),t._v("：字符串可直接输入"),_("code",[t._v("行分隔符")]),t._v("和"),_("code",[t._v("段分隔符")])]),t._v(" "),_("li",[_("strong",[t._v("JSON.stringify()改造")]),t._v("：可返回不符合UTF-8标准的字符串")]),t._v(" "),_("li",[_("strong",[t._v("trimStart()")]),t._v("：消除字符串头部空格，返回新字符串")]),t._v(" "),_("li",[_("strong",[t._v("trimEnd()")]),t._v("：消除字符串尾部空格，返回新字符串")])]),t._v(" "),_("h3",{attrs:{id:"对象扩展-3"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#对象扩展-3"}},[t._v("#")]),t._v(" 对象扩展")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("Object.fromEntries()")]),t._v("：返回以键和值组成的对象("),_("code",[t._v("Object.entries()")]),t._v("的逆操作)")])]),t._v(" "),_("h3",{attrs:{id:"数组扩展-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数组扩展-2"}},[t._v("#")]),t._v(" 数组扩展")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("flat()")]),t._v("：扁平化数组，返回新数组")]),t._v(" "),_("li",[_("strong",[t._v("flatMap()")]),t._v("：映射且扁平化数组，返回新数组(只能展开一层数组)")])]),t._v(" "),_("h3",{attrs:{id:"函数扩展-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#函数扩展-2"}},[t._v("#")]),t._v(" 函数扩展")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("toString()改造")]),t._v("：返回函数原始代码(与编码一致)")]),t._v(" "),_("li",[_("strong",[t._v("catch()参数可省略")]),t._v("："),_("code",[t._v("catch()")]),t._v("中的参数可省略")])]),t._v(" "),_("h3",{attrs:{id:"symbol"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#symbol"}},[t._v("#")]),t._v(" Symbol")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("description")]),t._v("：返回"),_("code",[t._v("Symbol值")]),t._v("的描述")])]),t._v(" "),_("h2",{attrs:{id:"es提案"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#es提案"}},[t._v("#")]),t._v(" ES提案")]),t._v(" "),_("h3",{attrs:{id:"声明-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#声明-2"}},[t._v("#")]),t._v(" 声明")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("globalThis对象")]),t._v("：作为顶层对象，指向全局环境下的"),_("code",[t._v("this")])]),t._v(" "),_("li",[_("strong",[t._v("do表达式")]),t._v("：封装块级作用域的操作，返回内部最后执行表达式的值("),_("code",[t._v("do{}")]),t._v(")")]),t._v(" "),_("li",[_("strong",[t._v("throw表达式")]),t._v("：直接使用"),_("code",[t._v("throw new Error()")]),t._v("，无需"),_("code",[t._v("()")]),t._v("或"),_("code",[t._v("{}")]),t._v("包括")]),t._v(" "),_("li",[_("strong",[t._v("!#命令")]),t._v("：指定脚本执行器(写在文件首行)")])]),t._v(" "),_("h3",{attrs:{id:"数值扩展-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#数值扩展-2"}},[t._v("#")]),t._v(" 数值扩展")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("数值分隔符(_)")]),t._v("：使用"),_("code",[t._v("_")]),t._v("作为千分位分隔符(增加数值的可读性)")]),t._v(" "),_("li",[_("strong",[t._v("BigInt()")]),t._v("：创建任何位数的整数(新增的数据类型，使用"),_("code",[t._v("n")]),t._v("结尾)")])]),t._v(" "),_("h3",{attrs:{id:"对象扩展-4"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#对象扩展-4"}},[t._v("#")]),t._v(" 对象扩展")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("链判断操作符(?.)")]),t._v("：是否存在对象属性(不存在返回"),_("code",[t._v("undefined")]),t._v("且不再往下执行)")]),t._v(" "),_("li",[_("strong",[t._v("空判断操作符(??)")]),t._v("：是否值为"),_("code",[t._v("undefined")]),t._v("或"),_("code",[t._v("null")]),t._v("，是则使用默认值")])]),t._v(" "),_("h3",{attrs:{id:"函数扩展-3"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#函数扩展-3"}},[t._v("#")]),t._v(" 函数扩展")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("函数部分执行")]),t._v("：复用函数功能("),_("code",[t._v("?")]),t._v("表示单个参数占位符，"),_("code",[t._v("...")]),t._v("表示多个参数占位符)")]),t._v(" "),_("li",[_("strong",[t._v("管道操作符(|>)")]),t._v("：把左边表达式的值传入右边的函数进行求值("),_("code",[t._v("f(x)")]),t._v(" => "),_("code",[t._v("x |> f")]),t._v(")")]),t._v(" "),_("li",[t._v("绑定运算符(:😃 ：函数绑定(左边是对象右边是函数，取代"),_("code",[t._v("bind")]),t._v("、"),_("code",[t._v("apply")]),t._v("、"),_("code",[t._v("call")]),t._v("调用)\n"),_("ul",[_("li",[t._v("bind："),_("code",[t._v("bar.bind(foo)")]),t._v(" => "),_("code",[t._v("foo::bar")])]),t._v(" "),_("li",[t._v("apply："),_("code",[t._v("bar.apply(foo, arguments)")]),t._v(" => "),_("code",[t._v("foo::bar(...arguments)")])])])])]),t._v(" "),_("h3",{attrs:{id:"proxy"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#proxy"}},[t._v("#")]),t._v(" Proxy")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("Promise.try()")]),t._v("：不想区分是否同步异步函数，包装函数为实例，使用"),_("code",[t._v("then()")]),t._v("指定下一步流程，使用"),_("code",[t._v("catch()")]),t._v("捕获错误")])]),t._v(" "),_("h3",{attrs:{id:"realm"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#realm"}},[t._v("#")]),t._v(" Realm")]),t._v(" "),_("ul",[_("li",[t._v("定义：提供"),_("code",[t._v("沙箱功能")]),t._v("，允许隔离代码，防止被隔离的代码拿到全局对象")]),t._v(" "),_("li",[t._v("声明："),_("code",[t._v("new Realm().global")])])]),t._v(" "),_("h3",{attrs:{id:"class"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#class"}},[t._v("#")]),t._v(" Class")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("静态属性")]),t._v("：使用"),_("code",[t._v("static")]),t._v("定义属性，该属性"),_("code",[t._v("不会被实例继承")]),t._v("，只能通过类来调用")]),t._v(" "),_("li",[_("strong",[t._v("私有属性")]),t._v("：使用"),_("code",[t._v("#")]),t._v("定义属性，该属性只能在类内部访问")]),t._v(" "),_("li",[_("strong",[t._v("私有方法")]),t._v("：使用"),_("code",[t._v("#")]),t._v("定义方法，该方法只能在类内部访问")]),t._v(" "),_("li",[_("strong",[t._v("装饰器")]),t._v("：使用"),_("code",[t._v("@")]),t._v("注释或修改类和类方法")])]),t._v(" "),_("h3",{attrs:{id:"module-2"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#module-2"}},[t._v("#")]),t._v(" Module")]),t._v(" "),_("ul",[_("li",[t._v("import()：动态导入(返回 "),_("code",[t._v("Promise")]),t._v(" )\n"),_("ul",[_("li",[t._v("背景："),_("code",[t._v("import命令")]),t._v("被JS引擎静态分析，先于模块内的其他语句执行，无法取代"),_("code",[t._v("require()")]),t._v("的动态加载功能，提案建议引入"),_("code",[t._v("import()")]),t._v("来代替"),_("code",[t._v("require()")])]),t._v(" "),_("li",[t._v("位置：可在任何地方使用")]),t._v(" "),_("li",[t._v("区别："),_("code",[t._v("require()")]),t._v("是"),_("strong",[t._v("同步加载")]),t._v("，"),_("code",[t._v("import()")]),t._v("是"),_("strong",[t._v("异步加载")])]),t._v(" "),_("li",[t._v("场景：按需加载、条件加载、模块路径动态化")])])]),t._v(" "),_("li",[_("strong",[t._v("import.meta")]),t._v("：返回脚本元信息")])]),t._v(" "),_("h3",{attrs:{id:"async-3"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#async-3"}},[t._v("#")]),t._v(" Async")]),t._v(" "),_("ul",[_("li",[_("strong",[t._v("顶层Await")]),t._v("：允许在模块的顶层独立使用"),_("code",[t._v("await命令")]),t._v("(借用"),_("code",[t._v("await")]),t._v("解决模块异步加载的问题)")])]),t._v(" "),_("h2",{attrs:{id:"参考链接"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#参考链接"}},[t._v("#")]),t._v(" 参考链接")]),t._v(" "),_("p",[t._v("https://es6.ruanyifeng.com/")]),t._v(" "),_("p",[t._v("https://juejin.im/post/5d9bf530518825427b27639d")])])}),[],!1,null,null,null);v.default=e.exports}}]);